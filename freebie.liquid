<script src="{{ 'freebie-atc.js' | asset_url }}" defer="defer"></script>
<script>
  window.freebieTiers = [
    {
      enabled: {{ settings.enable_freebie_tier_1 | json }},
      threshold: {{ settings.freebie_threshold_1 | times: 100 }},
      variantIds: [
        {% assign collection1 = collections[settings.freebie_collection_1.handle] %}
        {% for product in collection1.products %}
          {{ product.selected_or_first_available_variant.id }}{% unless forloop.last %}, {% endunless %}
        {% endfor %}
      ],
      selector: '.freebie-tier-1'
    },
    {
      enabled: {{ settings.enable_freebie_tier_2 | json }},
      threshold: {{ settings.freebie_threshold_2 | times: 100 }},
      variantIds: [
        {% assign collection2 = collections[settings.freebie_collection_2.handle] %}
        {% for product in collection2.products %}
          {{ product.selected_or_first_available_variant.id }}{% unless forloop.last %}, {% endunless %}
        {% endfor %}
      ],
      selector: '.freebie-tier-2'
    }
  ];
  window.EXCLUDED_PRODUCT_IDS = [
    {% assign ids = settings.excluded_ids | split: ',' %}
    {% for id in ids %}
      {{ id | strip | plus: 0 }}{% unless forloop.last %}, {% endunless %}
    {% endfor %}
  ];
</script>


{% if settings.enable_freebie and settings.freebie_product_list %}
  {% if settings.freebie_option == 'PopUp' %}
    <div class="main__freebie__container freebie-tier-1" style="display: none;">
      <h2>Freebie for ‚Çπ{{ settings.freebie_threshold_1 }}</h2>
      <div class="freebie__container page-width">
        {% assign freebie_collection = collections[settings.freebie_collection_1.handle] %}
        {% for product in freebie_collection.products %}
          {% if product.selected_or_first_available_variant.inventory_quantity > 0 %}
            <div class="freebie_product">
              {{ product.featured_image | image_url: width: 80 | image_tag }}
              <div class="freebie_product__content">
                <h4>{{ product.title }}</h4>
                <p>
                  <s>{{ product.price | money }}</s> <strong>{{ 0 | money }}</strong>
                </p>
                {% form 'product', product %}
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                  <input type="hidden" name="quantity" value="1">
                  <input type="submit" value="CLAIM" class="claim__button">
                {% endform %}
              </div>
            </div>
          {% endif %}
          <span class="close__btn">X</span>
        {% endfor %}
      </div>
    </div>

    <div class="main__freebie__container freebie-tier-2" style="display: none;">
      <h2>Freebie for ‚Çπ{{ settings.freebie_threshold_2 }}</h2>
      <div class="freebie__container page-width">
        {% assign freebie_collection = collections[settings.freebie_collection_2.handle] %}
        {% for product in freebie_collection.products %}
          {% if product.selected_or_first_available_variant.inventory_quantity > 0 %}
            <div class="freebie_product">
              {{ product.featured_image | image_url: width: 80 | image_tag }}
              <div class="freebie_product__content">
                <h4>{{ product.title }}</h4>
                <p>
                  <s>{{ product.price | money }}</s> <strong>{{ 0 | money }}</strong>
                </p>
                {% form 'product', product %}
                  <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                  <input type="hidden" name="quantity" value="1">
                  <input type="submit" value="CLAIM" class="claim__button">
                {% endform %}
              </div>
            </div>
          {% endif %}
          <span class="close__btn">X</span>
        {% endfor %}
      </div>
    </div>
    <div id="gift-widget" style="display:none; position:fixed; bottom:20px; left:20px; z-index:11111; cursor:pointer;">
      üéÅ <span style="font-weight:600;">Free Gift</span>
    </div>

    <style>
      .main__freebie__container{
        height: 100vh;
        width: 100vw;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background: rgba(0,0,0,0.25);
        position: fixed;
        top: 0;
        left: 0;
        z-index: 11111;
      }
      .freebie__container{
        display: grid;
        gap: 30px;
        grid-template-columns: repeat(3, 1fr);
        justify-content: center;
        background: #fff;
        border-radius: 5px;
        padding: 20px;
        box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
        position: relative;
      }
      .freebie_product{
        display: flex;
        gap: 5px;
        align-items: center;
        flex-direction: column;
        text-align: center;
        border-radius: 5px;
        box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;
        padding: 10px;
        white-space: normal;
      }
      .freebie_product__content h4,
      .freebie_product__content p{
        font-size: 12px;
        margin: 0 !important;
      }
      .freebie_product__content h4{
        font-weight: 600;
      }
      .freebie_product__content input[type="submit"]{
        border: none;
        border-radius: 2px;
        background: #000;
        color: #fff;
        padding: 5px 8px;
        font-size: 12px;
        cursor: pointer;
      }
      .close__btn{
        position: absolute;
        right: 10px;
        top: 5px;
        font-weight: bold;   
        cursor: pointer;
      }
      @media screen and (max-width: 749px){
        .main__freebie__container{
          width: auto;
          padding: 20px;
        }
        .freebie__container{
          grid-template-columns: repeat(2, 1fr);
          height: 70vh;
          overflow-y: scroll;
        }
      }
    </style>
    <script>
      const EXCLUDED_VARIANT_IDS = window.EXCLUDED_PRODUCT_IDS || [];
      function handleFreebieDisplay(cart, override = false) {
        if (!window.freebieTiers || window.freebieTiers.length < 2) return;
      
        const [tier1, tier2] = window.freebieTiers;
        const cartTotal = cart.total_price;
      
        // Hide all containers initially
        [tier1, tier2].forEach(tier => {
          const container = document.querySelector(tier.selector);
          if (container) container.style.display = "none";
        });

        // üö´ Check if cart contains any excluded products
        const hasExcludedProduct = cart.items.some(item =>
          EXCLUDED_VARIANT_IDS.includes(item.variant_id)
        );
        if (hasExcludedProduct) return;
      
        // Respect settings
        if (!tier1.enabled && !tier2.enabled) return;
      
        // Check usage
        const tier1UsedAsFree = tier1.enabled && cart.items.some(item =>
          tier1.variantIds.includes(item.variant_id) && item.final_line_price === 0
        );
        const tier2UsedAsFree = tier2.enabled && cart.items.some(item =>
          tier2.variantIds.includes(item.variant_id) && item.final_line_price === 0
        );
      
        // Don't auto-show if user closed it manually, unless override is true (clicked the widget)
        if (localStorage.getItem("freebie_closed") === "true" && !override) {
          document.getElementById("gift-widget").style.display = "block";
          return;
        }
      
        // Show Tier 2
        if (tier2.enabled && cartTotal >= tier2.threshold && tier1UsedAsFree && !tier2UsedAsFree) {
          document.querySelector(tier2.selector).style.display = "flex";
          return;
        }
      
        // Show Tier 1
        if (tier1.enabled && cartTotal >= tier1.threshold && !tier1UsedAsFree) {
          document.querySelector(tier1.selector).style.display = "flex";
          return;
        }
      }
      
      // Listen for cart updates
      window.addEventListener("cart:updated", (event) => {
        handleFreebieDisplay(event.detail.cartData);
      });
      
      // On load
      document.addEventListener("DOMContentLoaded", function () {
        fetch('/cart.js')
          .then(res => res.json())
          .then(cart => {
            handleFreebieDisplay(cart);
          });
      
        // Close button logic
        document.querySelectorAll(".close__btn").forEach(btn => {
          btn.addEventListener("click", function () {
            document.querySelectorAll(".main__freebie__container").forEach(c => c.style.display = "none");
            localStorage.setItem("freebie_closed", "true");
            document.getElementById("gift-widget").style.display = "block";
          });
        });
      
        // Gift widget click logic
        document.getElementById("gift-widget").addEventListener("click", () => {
          fetch('/cart.js')
            .then(res => res.json())
            .then(cart => {
              handleFreebieDisplay(cart, true); // force show
              localStorage.removeItem("freebie_closed"); // reset block
              document.getElementById("gift-widget").style.display = "none";
            });
        });
      });
    </script>
  {% else %}
    <div class="main__freebie__container freebie-tier-1" style="display: none;">
      <h2>Freebie for ‚Çπ{{ settings.freebie_threshold_1 }}</h2>
      <div class="freebie__container page-width">
        {% assign freebie_collection = collections[settings.freebie_collection_1.handle] %}
        {% for product in freebie_collection.products %}
          {% if product.selected_or_first_available_variant.inventory_quantity > 0 %}
            <div class="freebie_product">
              {{ product.featured_image | image_url: width: 80 | image_tag }}
              <div class="freebie_product__content">
                <h4>{{ product.title }}</h4>
                <p>
                  <s>{{ product.price | money }}</s> <strong>{{ 0 | money }}</strong>
                </p>
                {% render 'atc-button', product: product %}
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>

    <div class="main__freebie__container freebie-tier-2" style="display: none;">
      <h2>Freebie for ‚Çπ{{ settings.freebie_threshold_2 }}</h2>
      <div class="freebie__container page-width">
        {% assign freebie_collection_2 = collections[settings.freebie_collection_2.handle] %}
        {% for product in freebie_collection_2.products %}
          {% if product.selected_or_first_available_variant.inventory_quantity > 0 %}
            <div class="freebie_product">
              {{ product.featured_image | image_url: width: 80 | image_tag }}
              <div class="freebie_product__content">
                <h4>{{ product.title }}</h4>
                <p>
                  <s>{{ product.price | money }}</s> <strong>{{ 0 | money }}</strong>
                </p>
                {% render 'atc-button', product: product %}
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>

    <style>
      .main__freebie__container{
        display: none;
      }
      .freebie__container{
        display: flex;
        gap: 20px;
        overflow-x: auto;
        scroll-snap-type: x mandatory;
        overflow-y: hidden;
        background: #f2f2f2;
        padding: 15px 15px 10px;
      }
      .freebie_product{
        width: 220px;
        height: auto;
        flex-shrink: 0;
        display: flex;
        align-items: center;
        gap: 10px;
        background: #fff;
        padding: 5px;
        box-shadow: rgba(0, 0, 0, 0.1) 0px 10px 20px;
        border-radius: 3px;
      }
      .main__freebie__container h2{
        margin: 0 0 5px !important;
        font-size: 1.75rem;
        text-align: center;
      }
      .freebie_product__content h4,
      .freebie_product__content p{
        font-size: 12px;
        margin: 0 !important;
      }
      .freebie_product__content p s{
        font-size: 8px;
      }
      .main__freebie__container h2,
      .freebie_product__content h4{
        font-weight: 600;
      }
      .variant__select {
        font-size: 12px;
        padding: 5px;
        margin-bottom: 5px;
        border: 1px solid #ccc;
        border-radius: 3px;
        outline: 1px solid #ccc;
      }
      .freebie_product__content input[type="submit"]{
        border: none;
        border-radius: 2px;
        background: #000;
        color: #fff;
        padding: 5px 8px;
        font-size: 12px;
        cursor: pointer;
      }
      /* Webkit (Chrome, Edge, Safari) */
      .freebie__container::-webkit-scrollbar {
        height: 5px;
      }

      .freebie__container::-webkit-scrollbar-track {
        background: #f0f0f0;
        border-radius: 10px;
      }

      .freebie__container::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 10px;
        border: 2px solid #f0f0f0;
      }

      .freebie__container::-webkit-scrollbar-thumb:hover {
        background-color: #555;
      }

      /* Firefox */
      .freebie__container {
        scrollbar-width: thin;
        scrollbar-color: #888 #f0f0f0;
      }
      .freebie_product.loading {
        position: relative;
      }

      .freebie_product.loading::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        height: 3px;
        width: 100%;
        background: linear-gradient(to right, #000, #666);
        animation: loading-bar 1s linear infinite;
      }

      @keyframes loading-bar {
        0% {
          transform: translateX(-100%);
        }
        100% {
          transform: translateX(100%);
        }
      }
      .drawer__footer{
        padding: 1rem 0 !important;
      }
    </style>
    <script>
      const EXCLUDED_VARIANT_IDS = window.EXCLUDED_PRODUCT_IDS || [];
      function handleFreebieDisplay(cart) {
        if (!window.freebieTiers || window.freebieTiers.length < 2) return;
    
        const [tier1, tier2] = window.freebieTiers;
    
        const cartTotal = cart.total_price;
    
        // Hide all containers initially
        [tier1, tier2].forEach(tier => {
          const container = document.querySelector(tier.selector);
          if (container) container.style.display = "none";
        });

        // üö´ Check if cart contains any excluded products
        const hasExcludedProduct = cart.items.some(item =>
          EXCLUDED_VARIANT_IDS.includes(item.variant_id)
        );
        if (hasExcludedProduct) return;
    
        // Respect the setting: skip if not enabled
        if (!tier1.enabled && !tier2.enabled) return;
    
        // Check usage
        const tier1UsedAsFree = tier1.enabled && cart.items.some(item =>
          tier1.variantIds.includes(item.variant_id) && item.final_line_price === 0
        );
        const tier2UsedAsFree = tier2.enabled && cart.items.some(item =>
          tier2.variantIds.includes(item.variant_id) && item.final_line_price === 0
        );
    
        // ‚úÖ If both freebies already added, do nothing
        if (tier1UsedAsFree && tier2UsedAsFree) return;
    
        // ‚úÖ Show Tier 2 (if enabled + threshold met + tier1 already used)
        if (tier2.enabled && cartTotal >= tier2.threshold && tier1UsedAsFree && !tier2UsedAsFree) {
          const t2 = document.querySelector(tier2.selector);
          if (t2) t2.style.display = "block";
          return;
        }
    
        // ‚úÖ Show Tier 1 (if enabled + threshold met + not used)
        if (tier1.enabled && cartTotal >= tier1.threshold && !tier1UsedAsFree) {
          const t1 = document.querySelector(tier1.selector);
          if (t1) t1.style.display = "block";
        }
      }
    
      // Hook into cart updated
      window.addEventListener("cart:updated", (event) => {
        handleFreebieDisplay(event.detail.cartData);
      });
    
      // Hook into initial load
      document.addEventListener("DOMContentLoaded", function () {
        fetch('/cart.js')
          .then(res => res.json())
          .then(cart => {
            handleFreebieDisplay(cart);
          });
      });
    </script>

  {% endif %}
{% endif %}
